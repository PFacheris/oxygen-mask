<%
  require 'json'
  require 'yaml'

  def task(name, file, binding)
    {
      task: name,
      config: YAML.load(ERB.new(File.read(file)).result(binding))
    }.to_json
  end

  def emit_datadog_metric(name, value)
    task(
      "emit datadog metric -- #{name}",
      'tasks/emit_datadog_metric.yml.erb',
      binding
    )
  end
%>

resources:
- name: ((interval))
  type: time
  source:
    interval: ((interval))

jobs:
- name: view public pipeline
  build_logs_to_retain: 20
  serial: true
  plan:
  - get: ((interval))
    trigger: true
  - task: check pipeline returns known string
    timeout: 15s
    config:
      image_resource:
        type: docker-image
        source:
          repository: justinribeiro/chrome-headless
      params:
        ATC_URL: ((atc_url))
        TEAM_NAME: ((team_name))
        PIPELINE_NAME: ((pipeline_name))

      platform: linux
      run:
        path: bash
        args:
          - -c
          - |
            #!/bin/bash
            set -eux

            url=$ATC_URL/teams/$TEAM_NAME/pipelines/$PIPELINE_NAME
            google-chrome-stable --timeout=1000 --no-sandbox --disable-gpu --headless --virtual-time-budget=1000 --dump-dom $url | grep -q simple-job
    on_failure: <%= emit_datadog_metric('concourse.view_public_pipeline', 0) %>
    on_success: <%= emit_datadog_metric('concourse.view_public_pipeline', 1) %>
